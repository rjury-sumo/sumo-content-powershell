# auto generated by srcgen partitions 11/17/2020 2:22:05 PM 


<#
    .DESCRIPTION
    /v1/partitions,get

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .OUTPUTS
    PSCustomObject.
#>


function Get-Partitions {

    Param(
         [parameter()][SumoAPISession]$sumo_session = $sumo_session
     )
     return (invoke-sumo -path "partitions" -method GET -session $sumo_session -v 'v1')
 }
 
 <#
     .DESCRIPTION
     /v1/partitions,post
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER name
     The name of the partition.

     .PARAMETER routingExpression
     The query that defines the data to be included in the partition.

     .PARAMETER analyticsTier
     optional: 'frequent','infrequent','continuous','security', default continuous

    .PARAMETER retentionPeriod
    optional int days

    .PARAMETER dataForwardingId
    An optional ID of a data forwarding configuration to be used by the partition.
 
    .PARAMETER dryrun
    boolean - set to true to output the parition definition as JSON rather that post to sumo.

     .OUTPUTS
     PSCustomObject or json (if dryrun)
 #>
 
 
 function New-Partition {
 
    Param(
         [parameter()][SumoAPISession]$sumo_session = $sumo_session,
         [parameter(mandatory=$True)][string]$name,
         [parameter(mandatory=$True)][string]$routingExpression,
         [parameter(mandatory=$false)][string][ValidateSet('frequent','infrequent','continuous','security')]$analyticsTier = 'continuous',
         [parameter(mandatory=$false)][int]$retentionPeriod,
         [parameter(mandatory=$false)][string]$dataForwardingId,
         [parameter(mandatory=$false)][bool]$dryrun=$false

     )

     $partition = '{  "name": "apache", "routingExpression": "_sourcecategory=*/Apache", "analyticsTier": "continuous" }' | convertfrom-json -depth 10
     $partition.name = $name
     $partition.routingExpression = $routingExpression
     $partition.analyticsTier = $analyticsTier
     if ($retentionPeriod) {
       $partition | Add-Member -NotePropertyName retentionPeriod -NotePropertyValue $retentionPeriod
     }

     if ($dataForwardingId) {
        $partition | Add-Member -NotePropertyName dataForwardingId -NotePropertyValue $dataForwardingId
      }

    # isCompliant is not supported yet as it's a restricted feature.
      if ($dryrun) { return ($partition | convertto-json)} else {

          return (invoke-sumo -path "partitions" -method POST -session $sumo_session -v 'v1' -body $partition )
      }
 }
 
 <#
     .DESCRIPTION
     /v1/partitions/{id},get
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for get
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
 function Get-PartitionById {
 
    Param(
         [parameter()][SumoAPISession]$sumo_session = $sumo_session,
         [parameter(mandatory=$True)]$id
     )
     return (invoke-sumo -path "partitions/$id" -method GET -session $sumo_session -v 'v1')
 }
 
 <#
     .DESCRIPTION
     /v1/partitions/{id},put
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for put
 
     .PARAMETER body
     PSCustomObject body for put
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
 function Set-PartitionById {
 
    Param(
         [parameter()][SumoAPISession]$sumo_session = $sumo_session,
         [parameter(mandatory=$True)]$id,
         [parameter(mandatory=$True)]$body
     )
     return (invoke-sumo -path "partitions/$id" -method PUT -session $sumo_session -v 'v1' -body $body )
 }
 
 <#
     .DESCRIPTION
     /v1/partitions/{id}/cancelRetentionUpdate,post
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for post
 
     .PARAMETER body
     PSCustomObject body for post
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
 function New-PartitionCancelRetentionUpdateById {
 
    Param(
         [parameter()][SumoAPISession]$sumo_session = $sumo_session,
         [parameter(mandatory=$True)]$id,
         [parameter(mandatory=$True)]$body
     )
     return (invoke-sumo -path "partitions/$id/cancelRetentionUpdate" -method POST -session $sumo_session -v 'v1' -body $body )
 }
 
 <#
     .DESCRIPTION
     /v1/partitions/{id}/decommission,post
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for post
 
     .PARAMETER body
     PSCustomObject body for post
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
 function Set-PartitionDecommissionById {
 
    Param(
         [parameter()][SumoAPISession]$sumo_session = $sumo_session,
         [parameter(mandatory=$True)]$id
     )
     return (invoke-sumo -path "partitions/$id/decommission" -method POST -session $sumo_session -v 'v1' )
 }
 
 