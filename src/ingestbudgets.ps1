# auto generated by srcgen ingestBudgets 11/20/2020 9:17:49 AM 
# custom code added for query strings nov 20

<#
    .DESCRIPTION
    /v1/ingestBudgets,get

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .PARAMETER limit
    rows to return max 1000

    .PARAMETER token
     Continuation token to get the next page of results. A page object with the next continuation token is returned in the response body. Subsequent GET requests should specify the continuation token to get the next page of results

    .OUTPUTS
    PSCustomObject.
#>


function Get-IngestBudgetsv1 {

    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter()][string] $limit,
        [parameter()][string] $token
    )
    $params = @{}
 
    if ($limit) {
        $params['limit'] = $limit
    }
    if ($token) {
        $params['token'] = $token 
    }
 
    return (invoke-sumo -path "ingestBudgets" -method GET -session $sumo_session -v 'v1' -params $params)
}
 
<#
     .DESCRIPTION
     /v1/ingestBudgets,post
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER body
     PSCustomObject body for post
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function New-IngestBudgetsv1 {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$body
    )
    return (invoke-sumo -path "ingestBudgets" -method POST -session $sumo_session -v 'v1' -body $body )
}
 
<#
     .DESCRIPTION
     /v1/ingestBudgets/{id},delete
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for delete
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Remove-IngestBudgetv1ById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id
    )
    return (invoke-sumo -path "ingestBudgets/$id" -method DELETE -session $sumo_session -v 'v1')
}
 
<#
     .DESCRIPTION
     /v1/ingestBudgets/{id},get
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for get
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Get-IngestBudgetv1ById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id
    )
    return (invoke-sumo -path "ingestBudgets/$id" -method GET -session $sumo_session -v 'v1')
}
 
<#
     .DESCRIPTION
     /v1/ingestBudgets/{id},put
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for put
 
     .PARAMETER body
     PSCustomObject body for put
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Set-IngestBudgetv1ById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id,
        [parameter(mandatory = $True)]$body
    )
    return (invoke-sumo -path "ingestBudgets/$id" -method PUT -session $sumo_session -v 'v1' -body $body )
}
 
<#
     .DESCRIPTION
     /v1/ingestBudgets/{id}/collectors,get
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for get
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Get-IngestBudgetv1CollectorsById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id
    )
    return (invoke-sumo -path "ingestBudgets/$id/collectors" -method GET -session $sumo_session -v 'v1')
}
 
<#
     .DESCRIPTION
     /v1/ingestBudgets/{id}/collectors/{collectorId},delete
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for delete
 
     .PARAMETER collectorId
     collectorId for delete
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Remove-IngestBudgetv1CollectorsById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id,
        [parameter(mandatory = $True)]$collectorId
    )
    return (invoke-sumo -path "ingestBudgets/$id/collectors/$collectorId" -method DELETE -session $sumo_session -v 'v1')
}
 
<#
     .DESCRIPTION
     /v1/ingestBudgets/{id}/collectors/{collectorId},put
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for put
 
     .PARAMETER collectorId
     collectorId for put

     .EXAMPLE
     Set-IngestBudgetv1CollectorsById -id 0000000000002A13 -collectorId 109028144
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Set-IngestBudgetv1CollectorsById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id,
        [parameter(mandatory = $True)]$collectorId
    )

    return (invoke-sumo -path "ingestBudgets/$id/collectors/$collectorId" -method PUT -session $sumo_session -v 'v1' )
}
 
<#
     .DESCRIPTION
     /v1/ingestBudgets/{id}/usage/reset,post
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for post

     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Reset-IngestBudgetv1UsageResetById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id
    )
    return (invoke-sumo -path "ingestBudgets/$id/usage/reset" -method POST -session $sumo_session -v 'v1'  )
}
 
<#
     .DESCRIPTION
     /v2/ingestBudgets,get
 
    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .PARAMETER limit
    rows to return max 1000

    .PARAMETER token
     Continuation token to get the next page of results. A page object with the next continuation token is returned in the response body. Subsequent GET requests should specify the continuation token to get the next page of results

    .OUTPUTS
    PSCustomObject.
#>
 
 
function Get-IngestBudgetsv2 {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter()][string] $limit,
        [parameter()][string] $token
        )
        $params = @{}
     
        if ($limit) {
            $params['limit'] = $limit
        }
        if ($token) {
            $params['token'] = $token 

        }    return (invoke-sumo -path "ingestBudgets" -method GET -session $sumo_session -v 'v2' -params $params)
}
 
<#
     .DESCRIPTION
     /v2/ingestBudgets,post
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER body
     PSCustomObject body for post
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function New-IngestBudgetsv2 {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$body
    )
    return (invoke-sumo -path "ingestBudgets" -method POST -session $sumo_session -v 'v2' -body $body )
}
 
<#
     .DESCRIPTION
     /v2/ingestBudgets/{id},delete
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for delete
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Remove-IngestBudgetv2ById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id
    )
    return (invoke-sumo -path "ingestBudgets/$id" -method DELETE -session $sumo_session -v 'v2')
}
 
<#
     .DESCRIPTION
     /v2/ingestBudgets/{id},get
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for get
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Get-IngestBudgetv2ById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id
    )
    return (invoke-sumo -path "ingestBudgets/$id" -method GET -session $sumo_session -v 'v2')
}
 
<#
     .DESCRIPTION
     /v2/ingestBudgets/{id},put
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for put
 
     .PARAMETER body
     PSCustomObject body for put
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Set-IngestBudgetv2ById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id,
        [parameter(mandatory = $True)]$body
    )
    return (invoke-sumo -path "ingestBudgets/$id" -method PUT -session $sumo_session -v 'v2' -body $body )
}
 
<#
     .DESCRIPTION
     /v2/ingestBudgets/{id}/usage/reset,post
 
     .PARAMETER sumo_session
     Specify a session, defaults to $sumo_session
 
     .PARAMETER id
     id for post
 
     .PARAMETER body
     PSCustomObject body for post
 
     .OUTPUTS
     PSCustomObject.
 #>
 
 
function Reset-IngestBudgetv2UsageResetById {
 
    Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory = $True)]$id,
        [parameter(mandatory = $True)]$body
    )
    return (invoke-sumo -path "ingestBudgets/$id/usage/reset" -method POST -session $sumo_session -v 'v2' -body $body )
}
 
 