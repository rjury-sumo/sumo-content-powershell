# auto generated by srcgen policies 12/8/2021 1:02:03 PM 


<#
    .DESCRIPTION
    /v1/policies/audit,get

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .OUTPUTS
    PSCustomObject.
#>


function Get-PoliciesAudit {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session
    )
    return (invoke-sumo -path "policies/audit" -method GET -session $sumo_session -v 'v1')
}

<#
    .DESCRIPTION
    /v1/policies/audit,put

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .PARAMETER body
    PSCustomObject body for put

    .OUTPUTS
    PSCustomObject.
#>


function Set-PoliciesAudit {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory=$True)]$body
    )
    return (invoke-sumo -path "policies/audit" -method PUT -session $sumo_session -v 'v1' -body $body )
}

<#
    .DESCRIPTION
    /v1/policies/dataAccessLevel,get

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .OUTPUTS
    PSCustomObject.
#>


function Get-PoliciesDataAccessLevel {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session
    )
    return (invoke-sumo -path "policies/dataAccessLevel" -method GET -session $sumo_session -v 'v1')
}

<#
    .DESCRIPTION
    /v1/policies/dataAccessLevel,put

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .PARAMETER body
    PSCustomObject body for put

    .OUTPUTS
    PSCustomObject.
#>


function Set-PoliciesDataAccessLevel {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory=$True)]$body
    )
    return (invoke-sumo -path "policies/dataAccessLevel" -method PUT -session $sumo_session -v 'v1' -body $body )
}

<#
    .DESCRIPTION
    /v1/policies/maxUserSessionTimeout,get

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .OUTPUTS
    PSCustomObject.
#>


function Get-PoliciesMaxUserSessionTimeout {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session
    )
    return (invoke-sumo -path "policies/maxUserSessionTimeout" -method GET -session $sumo_session -v 'v1')
}

<#
    .DESCRIPTION
    /v1/policies/maxUserSessionTimeout,put

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .PARAMETER body
    PSCustomObject body for put

    .OUTPUTS
    PSCustomObject.
#>


function Set-PoliciesMaxUserSessionTimeout {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory=$True)]$body
    )
    return (invoke-sumo -path "policies/maxUserSessionTimeout" -method PUT -session $sumo_session -v 'v1' -body $body )
}

<#
    .DESCRIPTION
    /v1/policies/searchAudit,get

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .OUTPUTS
    PSCustomObject.
#>


function Get-PoliciesSearchAudit {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session
    )
    return (invoke-sumo -path "policies/searchAudit" -method GET -session $sumo_session -v 'v1')
}

<#
    .DESCRIPTION
    /v1/policies/searchAudit,put

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .PARAMETER body
    PSCustomObject body for put

    .OUTPUTS
    PSCustomObject.
#>


function Set-PoliciesSearchAudit {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory=$True)]$body
    )
    return (invoke-sumo -path "policies/searchAudit" -method PUT -session $sumo_session -v 'v1' -body $body )
}

<#
    .DESCRIPTION
    /v1/policies/shareDashboardsOutsideOrganization,get

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .OUTPUTS
    PSCustomObject.
#>


function Get-PoliciesShareDashboardsOutsideOrganization {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session
    )
    return (invoke-sumo -path "policies/shareDashboardsOutsideOrganization" -method GET -session $sumo_session -v 'v1')
}

<#
    .DESCRIPTION
    /v1/policies/shareDashboardsOutsideOrganization,put

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .PARAMETER body
    PSCustomObject body for put

    .OUTPUTS
    PSCustomObject.
#>


function Set-PoliciesShareDashboardsOutsideOrganization {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory=$True)]$body
    )
    return (invoke-sumo -path "policies/shareDashboardsOutsideOrganization" -method PUT -session $sumo_session -v 'v1' -body $body )
}

<#
    .DESCRIPTION
    /v1/policies/userConcurrentSessionsLimit,get

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .OUTPUTS
    PSCustomObject.
#>


function Get-PoliciesUserConcurrentSessionsLimit {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session
    )
    return (invoke-sumo -path "policies/userConcurrentSessionsLimit" -method GET -session $sumo_session -v 'v1')
}

<#
    .DESCRIPTION
    /v1/policies/userConcurrentSessionsLimit,put

    .PARAMETER sumo_session
    Specify a session, defaults to $sumo_session

    .PARAMETER body
    PSCustomObject body for put

    .OUTPUTS
    PSCustomObject.
#>


function Set-PoliciesUserConcurrentSessionsLimit {

   Param(
        [parameter()][SumoAPISession]$sumo_session = $sumo_session,
        [parameter(mandatory=$True)]$body
    )
    return (invoke-sumo -path "policies/userConcurrentSessionsLimit" -method PUT -session $sumo_session -v 'v1' -body $body )
}

